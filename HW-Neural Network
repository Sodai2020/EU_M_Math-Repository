{"cells":[{"cell_type":"markdown","source":["# DNN 教材"],"metadata":{"id":"xaHVTzJ4G9Qb"}},{"cell_type":"markdown","metadata":{"id":"JDFBVx0PvTy2"},"source":["### Perceptron"]},{"cell_type":"markdown","metadata":{"id":"W6OWATZWvTy3"},"source":["実際にPerceptronを使って、Irisの花の種類がIris Setosaかそれ以外かを判別するモデルを作る。\n","\n","__Dataset__ \n","\n","50個のIrisの花に関するレコードがある。がく片の幅、がく片の長さ、花弁の長さ、花弁の幅、Irisの花の種類が一つのレコードに含まれている。花の種類は、Iris Setosa、Iris VersicolourとIris Virginicaのどれか。\n","\n","__Goal__\n","\n","Irisのがく片と花弁の特徴を基に、IrisがIris Setosaかそれ以外かを判別するモデルを作る"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"OVZXi93mvTy3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658189220245,"user_tz":-540,"elapsed":1070,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"8f407208-97f0-4df0-85e4-fd07ffa54926"},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 1.0\n"]}],"source":["import numpy as np \n","from sklearn.datasets import load_iris \n","from sklearn.linear_model import Perceptron\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score\n","\n","#データセットをロード\n","iris = load_iris()\n","#predictor と　target に分ける\n","X = iris.data   \n","#Iris Setosaが１の値をとり、それ以外は０\n","Y = (iris.target==0).astype(int)\n","#データセットのシャッフルをして、トレーニング用とテスト用のデータに分ける\n","#モデルの評価をしっかりやりたい時は、cross validationを実行、さらにハイパーパラメータの最適化を行う\n","train_X, test_X, train_Y, test_Y = train_test_split(X,Y,test_size = 0.3, random_state=42, shuffle=True)\n","\n","#トレーニング\n","perc_clf = Perceptron()\n","perc_clf.fit(train_X,train_Y)\n","\n","#テスト\n","predictions = perc_clf.predict(test_X)\n","\n","#Accuracyを計算\n","print(\"Accuracy: \" +str(accuracy_score(test_Y,predictions)))"]},{"cell_type":"markdown","metadata":{"id":"NUDPWu9CvTy5"},"source":["### Multi Layer Perceptron using Scikit learn"]},{"cell_type":"markdown","metadata":{"id":"F6A-qF2rvTy5"},"source":["Multi Layer Perceptronを使って、3つのIrisの種類を判別するモデルを作る\n","\n","__Dataset__\n","\n","前回と同じ\n","\n","__Goal__\n","\n","Irisのがく片と花弁の特徴を基に、Irisの花がIris Setosa、Iris Versicolour、それともIris Virginicaかを判別する。\n","\n","__Note__\n","\n","\n","*   一つのクラスの判別に一つのoutput nodeが必要なので、3つのoutput nodeが必要。ただコードを書く際にこの指定は不要。\n","\n","*   一つ一つのアウトプットノードはそのクラスに当てはまる確率を計算して、出力。\n","\n","\n","\n","*   一つのレコードに対して一つのクラスが割り当てられているので、その三つのoutput node から出てくる確率の合計は１になる必要がある。\n","\n"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"fqXSwyakvTy5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658189252183,"user_tz":-540,"elapsed":2771,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"23099088-e011-46b1-c215-1e7b87768084"},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9777777777777777\n"]}],"source":["from sklearn.datasets import load_iris\n","from sklearn.neural_network import MLPClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score\n","#データセットをロード\n","iris = load_iris()\n","#predictor と　target に分ける\n","X = iris.data\n","Y = iris.target\n","\n","\n","#データセットのシャッフルをして、トレーニング用とテスト用のデータに分ける\n","#モデルの評価をしっかりやりたい時は、validationのデータセットを作るのが良い。\n","train_X, test_X, train_Y, test_Y = train_test_split(X,Y,test_size = 0.3, random_state=42, shuffle=True)\n","\n","\n","#二つのHidden Layer を追加、それぞれ10個のニューロンを持つ\n","mlp_clsf = MLPClassifier((10,10),activation ='relu',learning_rate='constant',learning_rate_init=0.001,max_iter=1000,random_state=42)\n","mlp_clsf.fit(train_X,train_Y)\n","predictions = mlp_clsf.predict(test_X)\n","print(\"Accuracy: \"+str(accuracy_score(test_Y,predictions)))\n","\n"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"XfyE9k6SvTy6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658189252184,"user_tz":-540,"elapsed":6,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"3fd4ca42-fb54-49ec-9bda-a5d0daca2884"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":3}],"source":["#確率の合計が１かを確認\n","mlp_clsf.predict_proba(test_X[0].reshape(1,-1)).sum()\n"]},{"cell_type":"markdown","metadata":{"id":"AQI7-M9KvTy6"},"source":["### Activation Function "]},{"cell_type":"markdown","source":["このMLPにSoftmaxがactivation functionとして使われている"],"metadata":{"id":"k7_W11IYID2p"}},{"cell_type":"code","execution_count":4,"metadata":{"id":"ffl1_qbxvTy7","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1658189254022,"user_tz":-540,"elapsed":5,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"fe59218d-5520-45cb-921a-04bbd823c02a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'softmax'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":4}],"source":["mlp_clsf.out_activation_"]},{"cell_type":"markdown","metadata":{"id":"xEC5-Px4vTy7"},"source":["## MLP Regression "]},{"cell_type":"markdown","metadata":{"id":"ENGVw0vUvTy7"},"source":["MLP Regressorを用いて、ボストンの住宅価格(単位は1000$)を予測するモデルを作る\n","\n","__Dataset__ \n","\n","1970年代のボストン郊外の住宅地に関するデータセット。ボストン郊外の異なるロケーションで13個の住宅に関する変数と住宅の価格の中央値が記録されている。506個のレコードが記録されている。\n","\n","__Goal__\n","\n","その中央値を13個の変数を基に予測する。\n","\n","\n","　"]},{"cell_type":"code","execution_count":5,"metadata":{"scrolled":true,"id":"fC6bRC1PvTy7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658189291635,"user_tz":-540,"elapsed":3170,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"cae0de6b-4118-4ead-ac3c-9f8affcced12"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function load_boston is deprecated; `load_boston` is deprecated in 1.0 and will be removed in 1.2.\n","\n","    The Boston housing prices dataset has an ethical problem. You can refer to\n","    the documentation of this function for further details.\n","\n","    The scikit-learn maintainers therefore strongly discourage the use of this\n","    dataset unless the purpose of the code is to study and educate about\n","    ethical issues in data science and machine learning.\n","\n","    In this special case, you can fetch the dataset from the original\n","    source::\n","\n","        import pandas as pd\n","        import numpy as np\n","\n","\n","        data_url = \"http://lib.stat.cmu.edu/datasets/boston\"\n","        raw_df = pd.read_csv(data_url, sep=\"\\s+\", skiprows=22, header=None)\n","        data = np.hstack([raw_df.values[::2, :], raw_df.values[1::2, :2]])\n","        target = raw_df.values[1::2, 2]\n","\n","    Alternative datasets include the California housing dataset (i.e.\n","    :func:`~sklearn.datasets.fetch_california_housing`) and the Ames housing\n","    dataset. You can load the datasets as follows::\n","\n","        from sklearn.datasets import fetch_california_housing\n","        housing = fetch_california_housing()\n","\n","    for the California housing dataset and::\n","\n","        from sklearn.datasets import fetch_openml\n","        housing = fetch_openml(name=\"house_prices\", as_frame=True)\n","\n","    for the Ames housing dataset.\n","    \n","  warnings.warn(msg, category=FutureWarning)\n"]},{"output_type":"stream","name":"stdout","text":["RSME: 4.699377521565086\n"]}],"source":["from sklearn.datasets import load_boston\n","from sklearn.neural_network import MLPRegressor\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_squared_error\n","\n","#データセットをロード\n","dataset = load_boston()\n","X = dataset['data']\n","Y = dataset['target']\n","\n","\n","#テストとトレーニングのデータセットに分ける\n","#モデルの評価をしっかりやりたい時は、validationのデータセットを作るのが良い。\n","train_X, test_X, train_Y, test_Y = train_test_split(X,Y, test_size = 0.3, random_state = 42, shuffle =True)\n","\n","#２個のhidden layerを追加　activation function は relu.\n","mlp_reg = MLPRegressor((10,10),activation ='relu',learning_rate='constant',learning_rate_init=0.001,max_iter=3000,random_state=42)\n","mlp_reg.fit(train_X,train_Y)\n","predictions = mlp_reg.predict(test_X)\n","\n","\n","\n","#RSMEを計算\n","error = mean_squared_error(test_Y,predictions) ** (1/2)\n","print(\"RSME: \" +str(error))\n","\n"]},{"cell_type":"markdown","metadata":{"id":"VfeMh6E7vTy8"},"source":["::アウトプットノードのActivation functionはIdentity。（Activation function は使われていないということ。）"]},{"cell_type":"code","execution_count":6,"metadata":{"scrolled":true,"id":"yLfuWPKWvTy8","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1658189298572,"user_tz":-540,"elapsed":387,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"304419f1-526a-412c-e88b-5659a92d3649"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'identity'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":6}],"source":["mlp_reg.out_activation_"]},{"cell_type":"markdown","metadata":{"id":"KFaUB_E7vTy8"},"source":["## Regression using Keras  "]},{"cell_type":"code","execution_count":7,"metadata":{"scrolled":true,"id":"36cxPugbvTy8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658189397200,"user_tz":-540,"elapsed":11025,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"b8d84868-4b75-4124-9047-780921c3f0be"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/boston_housing.npz\n","57344/57026 [==============================] - 0s 0us/step\n","65536/57026 [==================================] - 0s 0us/step\n","Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 30)                420       \n","                                                                 \n"," dense_1 (Dense)             (None, 1)                 31        \n","                                                                 \n","=================================================================\n","Total params: 451\n","Trainable params: 451\n","Non-trainable params: 0\n","_________________________________________________________________\n","Epoch 1/70\n","10/10 [==============================] - 1s 26ms/step - loss: 200.2141 - root_mean_squared_error: 14.1497 - val_loss: 37.7510 - val_root_mean_squared_error: 6.1442\n","Epoch 2/70\n","10/10 [==============================] - 0s 5ms/step - loss: 27.2046 - root_mean_squared_error: 5.2158 - val_loss: 30.0586 - val_root_mean_squared_error: 5.4826\n","Epoch 3/70\n","10/10 [==============================] - 0s 7ms/step - loss: 21.2770 - root_mean_squared_error: 4.6127 - val_loss: 26.8051 - val_root_mean_squared_error: 5.1774\n","Epoch 4/70\n","10/10 [==============================] - 0s 7ms/step - loss: 17.5249 - root_mean_squared_error: 4.1863 - val_loss: 28.5064 - val_root_mean_squared_error: 5.3391\n","Epoch 5/70\n","10/10 [==============================] - 0s 7ms/step - loss: 15.5767 - root_mean_squared_error: 3.9467 - val_loss: 22.7304 - val_root_mean_squared_error: 4.7676\n","Epoch 6/70\n","10/10 [==============================] - 0s 7ms/step - loss: 14.3534 - root_mean_squared_error: 3.7886 - val_loss: 19.7506 - val_root_mean_squared_error: 4.4442\n","Epoch 7/70\n","10/10 [==============================] - 0s 5ms/step - loss: 12.3984 - root_mean_squared_error: 3.5211 - val_loss: 18.5969 - val_root_mean_squared_error: 4.3124\n","Epoch 8/70\n","10/10 [==============================] - 0s 5ms/step - loss: 12.1055 - root_mean_squared_error: 3.4793 - val_loss: 17.6796 - val_root_mean_squared_error: 4.2047\n","Epoch 9/70\n","10/10 [==============================] - 0s 7ms/step - loss: 11.1047 - root_mean_squared_error: 3.3324 - val_loss: 19.2477 - val_root_mean_squared_error: 4.3872\n","Epoch 10/70\n","10/10 [==============================] - 0s 5ms/step - loss: 12.7411 - root_mean_squared_error: 3.5695 - val_loss: 17.2863 - val_root_mean_squared_error: 4.1577\n","Epoch 11/70\n","10/10 [==============================] - 0s 5ms/step - loss: 10.6006 - root_mean_squared_error: 3.2559 - val_loss: 17.0393 - val_root_mean_squared_error: 4.1279\n","Epoch 12/70\n","10/10 [==============================] - 0s 7ms/step - loss: 10.6725 - root_mean_squared_error: 3.2669 - val_loss: 16.3194 - val_root_mean_squared_error: 4.0397\n","Epoch 13/70\n","10/10 [==============================] - 0s 7ms/step - loss: 9.9663 - root_mean_squared_error: 3.1570 - val_loss: 18.1849 - val_root_mean_squared_error: 4.2644\n","Epoch 14/70\n","10/10 [==============================] - 0s 7ms/step - loss: 9.7740 - root_mean_squared_error: 3.1263 - val_loss: 13.5103 - val_root_mean_squared_error: 3.6756\n","Epoch 15/70\n","10/10 [==============================] - 0s 7ms/step - loss: 9.7568 - root_mean_squared_error: 3.1236 - val_loss: 16.3185 - val_root_mean_squared_error: 4.0396\n","Epoch 16/70\n","10/10 [==============================] - 0s 7ms/step - loss: 9.8502 - root_mean_squared_error: 3.1385 - val_loss: 15.8721 - val_root_mean_squared_error: 3.9840\n","Epoch 17/70\n","10/10 [==============================] - 0s 7ms/step - loss: 10.2954 - root_mean_squared_error: 3.2086 - val_loss: 18.5466 - val_root_mean_squared_error: 4.3066\n","Epoch 18/70\n","10/10 [==============================] - 0s 6ms/step - loss: 9.9378 - root_mean_squared_error: 3.1524 - val_loss: 16.8719 - val_root_mean_squared_error: 4.1075\n","Epoch 19/70\n","10/10 [==============================] - 0s 7ms/step - loss: 8.9985 - root_mean_squared_error: 2.9997 - val_loss: 15.1404 - val_root_mean_squared_error: 3.8911\n","Epoch 20/70\n","10/10 [==============================] - 0s 5ms/step - loss: 8.5102 - root_mean_squared_error: 2.9172 - val_loss: 16.3121 - val_root_mean_squared_error: 4.0388\n","Epoch 21/70\n","10/10 [==============================] - 0s 5ms/step - loss: 9.5344 - root_mean_squared_error: 3.0878 - val_loss: 14.0625 - val_root_mean_squared_error: 3.7500\n","Epoch 22/70\n","10/10 [==============================] - 0s 6ms/step - loss: 8.4531 - root_mean_squared_error: 2.9074 - val_loss: 16.6551 - val_root_mean_squared_error: 4.0811\n","Epoch 23/70\n","10/10 [==============================] - 0s 7ms/step - loss: 9.0914 - root_mean_squared_error: 3.0152 - val_loss: 15.3252 - val_root_mean_squared_error: 3.9147\n","Epoch 24/70\n","10/10 [==============================] - 0s 6ms/step - loss: 8.0442 - root_mean_squared_error: 2.8362 - val_loss: 18.9589 - val_root_mean_squared_error: 4.3542\n","Epoch 25/70\n","10/10 [==============================] - 0s 5ms/step - loss: 8.4980 - root_mean_squared_error: 2.9151 - val_loss: 16.4722 - val_root_mean_squared_error: 4.0586\n","Epoch 26/70\n","10/10 [==============================] - 0s 7ms/step - loss: 9.0776 - root_mean_squared_error: 3.0129 - val_loss: 17.5080 - val_root_mean_squared_error: 4.1843\n","Epoch 27/70\n","10/10 [==============================] - 0s 6ms/step - loss: 8.3663 - root_mean_squared_error: 2.8925 - val_loss: 20.1558 - val_root_mean_squared_error: 4.4895\n","Epoch 28/70\n","10/10 [==============================] - 0s 8ms/step - loss: 9.5101 - root_mean_squared_error: 3.0838 - val_loss: 17.8578 - val_root_mean_squared_error: 4.2258\n","Epoch 29/70\n","10/10 [==============================] - 0s 7ms/step - loss: 8.3034 - root_mean_squared_error: 2.8816 - val_loss: 13.8015 - val_root_mean_squared_error: 3.7150\n","Epoch 30/70\n","10/10 [==============================] - 0s 5ms/step - loss: 8.1798 - root_mean_squared_error: 2.8600 - val_loss: 14.0762 - val_root_mean_squared_error: 3.7518\n","Epoch 31/70\n","10/10 [==============================] - 0s 5ms/step - loss: 7.6595 - root_mean_squared_error: 2.7676 - val_loss: 14.3969 - val_root_mean_squared_error: 3.7943\n","Epoch 32/70\n","10/10 [==============================] - 0s 5ms/step - loss: 8.2327 - root_mean_squared_error: 2.8693 - val_loss: 14.2498 - val_root_mean_squared_error: 3.7749\n","Epoch 33/70\n","10/10 [==============================] - 0s 7ms/step - loss: 7.8155 - root_mean_squared_error: 2.7956 - val_loss: 16.5112 - val_root_mean_squared_error: 4.0634\n","Epoch 34/70\n","10/10 [==============================] - 0s 8ms/step - loss: 8.6245 - root_mean_squared_error: 2.9367 - val_loss: 14.1360 - val_root_mean_squared_error: 3.7598\n","Epoch 35/70\n","10/10 [==============================] - 0s 5ms/step - loss: 7.8925 - root_mean_squared_error: 2.8094 - val_loss: 14.3277 - val_root_mean_squared_error: 3.7852\n","Epoch 36/70\n","10/10 [==============================] - 0s 6ms/step - loss: 8.9585 - root_mean_squared_error: 2.9931 - val_loss: 17.1908 - val_root_mean_squared_error: 4.1462\n","Epoch 37/70\n","10/10 [==============================] - 0s 6ms/step - loss: 7.9871 - root_mean_squared_error: 2.8261 - val_loss: 15.6306 - val_root_mean_squared_error: 3.9536\n","Epoch 38/70\n","10/10 [==============================] - 0s 5ms/step - loss: 8.8273 - root_mean_squared_error: 2.9711 - val_loss: 15.5162 - val_root_mean_squared_error: 3.9391\n","Epoch 39/70\n","10/10 [==============================] - 0s 5ms/step - loss: 7.5200 - root_mean_squared_error: 2.7423 - val_loss: 13.9830 - val_root_mean_squared_error: 3.7394\n","Epoch 40/70\n","10/10 [==============================] - 0s 5ms/step - loss: 7.8178 - root_mean_squared_error: 2.7960 - val_loss: 15.2790 - val_root_mean_squared_error: 3.9088\n","Epoch 41/70\n","10/10 [==============================] - 0s 6ms/step - loss: 8.2157 - root_mean_squared_error: 2.8663 - val_loss: 13.7554 - val_root_mean_squared_error: 3.7088\n","Epoch 42/70\n","10/10 [==============================] - 0s 7ms/step - loss: 7.9355 - root_mean_squared_error: 2.8170 - val_loss: 15.1617 - val_root_mean_squared_error: 3.8938\n","Epoch 43/70\n","10/10 [==============================] - 0s 7ms/step - loss: 7.1543 - root_mean_squared_error: 2.6747 - val_loss: 15.1799 - val_root_mean_squared_error: 3.8961\n","Epoch 44/70\n","10/10 [==============================] - 0s 7ms/step - loss: 7.0247 - root_mean_squared_error: 2.6504 - val_loss: 16.7782 - val_root_mean_squared_error: 4.0961\n","Epoch 45/70\n","10/10 [==============================] - 0s 8ms/step - loss: 7.2345 - root_mean_squared_error: 2.6897 - val_loss: 15.6764 - val_root_mean_squared_error: 3.9593\n","Epoch 46/70\n","10/10 [==============================] - 0s 8ms/step - loss: 7.6137 - root_mean_squared_error: 2.7593 - val_loss: 15.2430 - val_root_mean_squared_error: 3.9042\n","Epoch 47/70\n","10/10 [==============================] - 0s 5ms/step - loss: 6.8620 - root_mean_squared_error: 2.6195 - val_loss: 14.2070 - val_root_mean_squared_error: 3.7692\n","Epoch 48/70\n","10/10 [==============================] - 0s 6ms/step - loss: 6.6922 - root_mean_squared_error: 2.5869 - val_loss: 14.9534 - val_root_mean_squared_error: 3.8670\n","Epoch 49/70\n","10/10 [==============================] - 0s 5ms/step - loss: 7.4604 - root_mean_squared_error: 2.7314 - val_loss: 13.8597 - val_root_mean_squared_error: 3.7229\n","Epoch 50/70\n","10/10 [==============================] - 0s 5ms/step - loss: 6.8682 - root_mean_squared_error: 2.6207 - val_loss: 13.9386 - val_root_mean_squared_error: 3.7334\n","Epoch 51/70\n","10/10 [==============================] - 0s 7ms/step - loss: 7.9808 - root_mean_squared_error: 2.8250 - val_loss: 14.9240 - val_root_mean_squared_error: 3.8632\n","Epoch 52/70\n","10/10 [==============================] - 0s 6ms/step - loss: 7.2977 - root_mean_squared_error: 2.7014 - val_loss: 20.1629 - val_root_mean_squared_error: 4.4903\n","Epoch 53/70\n","10/10 [==============================] - 0s 6ms/step - loss: 7.5356 - root_mean_squared_error: 2.7451 - val_loss: 18.9874 - val_root_mean_squared_error: 4.3575\n","Epoch 54/70\n","10/10 [==============================] - 0s 6ms/step - loss: 8.1869 - root_mean_squared_error: 2.8613 - val_loss: 16.0964 - val_root_mean_squared_error: 4.0120\n","Epoch 55/70\n","10/10 [==============================] - 0s 7ms/step - loss: 7.7440 - root_mean_squared_error: 2.7828 - val_loss: 14.9097 - val_root_mean_squared_error: 3.8613\n","Epoch 56/70\n","10/10 [==============================] - 0s 6ms/step - loss: 6.8184 - root_mean_squared_error: 2.6112 - val_loss: 13.9790 - val_root_mean_squared_error: 3.7389\n","Epoch 57/70\n","10/10 [==============================] - 0s 5ms/step - loss: 6.5494 - root_mean_squared_error: 2.5592 - val_loss: 13.6979 - val_root_mean_squared_error: 3.7011\n","Epoch 58/70\n","10/10 [==============================] - 0s 6ms/step - loss: 7.1548 - root_mean_squared_error: 2.6748 - val_loss: 13.8890 - val_root_mean_squared_error: 3.7268\n","Epoch 59/70\n","10/10 [==============================] - 0s 5ms/step - loss: 7.4954 - root_mean_squared_error: 2.7378 - val_loss: 17.4677 - val_root_mean_squared_error: 4.1794\n","Epoch 60/70\n","10/10 [==============================] - 0s 5ms/step - loss: 6.9132 - root_mean_squared_error: 2.6293 - val_loss: 14.2144 - val_root_mean_squared_error: 3.7702\n","Epoch 61/70\n","10/10 [==============================] - 0s 5ms/step - loss: 7.4932 - root_mean_squared_error: 2.7374 - val_loss: 14.0335 - val_root_mean_squared_error: 3.7461\n","Epoch 62/70\n","10/10 [==============================] - 0s 7ms/step - loss: 6.5002 - root_mean_squared_error: 2.5496 - val_loss: 14.3807 - val_root_mean_squared_error: 3.7922\n","Epoch 63/70\n","10/10 [==============================] - 0s 8ms/step - loss: 6.6665 - root_mean_squared_error: 2.5819 - val_loss: 17.6152 - val_root_mean_squared_error: 4.1970\n","Epoch 64/70\n","10/10 [==============================] - 0s 5ms/step - loss: 7.4290 - root_mean_squared_error: 2.7256 - val_loss: 13.9725 - val_root_mean_squared_error: 3.7380\n","Epoch 65/70\n","10/10 [==============================] - 0s 8ms/step - loss: 7.6854 - root_mean_squared_error: 2.7723 - val_loss: 13.4199 - val_root_mean_squared_error: 3.6633\n","Epoch 66/70\n","10/10 [==============================] - 0s 6ms/step - loss: 7.0556 - root_mean_squared_error: 2.6562 - val_loss: 14.7622 - val_root_mean_squared_error: 3.8422\n","Epoch 67/70\n","10/10 [==============================] - 0s 6ms/step - loss: 7.0158 - root_mean_squared_error: 2.6487 - val_loss: 14.0188 - val_root_mean_squared_error: 3.7442\n","Epoch 68/70\n","10/10 [==============================] - 0s 8ms/step - loss: 7.0772 - root_mean_squared_error: 2.6603 - val_loss: 16.2123 - val_root_mean_squared_error: 4.0264\n","Epoch 69/70\n","10/10 [==============================] - 0s 6ms/step - loss: 6.7384 - root_mean_squared_error: 2.5958 - val_loss: 13.8769 - val_root_mean_squared_error: 3.7252\n","Epoch 70/70\n","10/10 [==============================] - 0s 9ms/step - loss: 6.4052 - root_mean_squared_error: 2.5308 - val_loss: 15.1880 - val_root_mean_squared_error: 3.8972\n"]}],"source":["import tensorflow as tf \n","from tensorflow import keras\n","from sklearn.preprocessing import StandardScaler\n","\n","#データセットをダウンロード\n","house_price = keras.datasets.boston_housing\n","#データをtraining, validation, test に分ける\n","(train_X, train_Y), (test_X, test_Y) = house_price.load_data()\n","train_X, valid_X, train_Y, valid_Y = train_test_split(train_X, train_Y)\n","\n","\n","#変数をスケーリング　最適化を早くするため\n","scaler = StandardScaler()\n","train_X = scaler.fit_transform(train_X)\n","valid_X = scaler.fit_transform(valid_X)\n","test_X = scaler.fit_transform(test_X)\n","\n","\n","\n","\n","#KerasのSequential model を使う\n","keras_model = keras.models.Sequential()\n","#インプットレイヤーを追加\n","keras_model.add(tf.keras.Input(shape=train_X.shape[1:],))\n","#Hidden layer を追加\n","keras_model.add(tf.keras.layers.Dense(30,activation=\"relu\"))\n","#Output layer を追加\n","keras_model.add(tf.keras.layers.Dense(1))\n","\n","keras_model.summary()\n","\n","#モデルをコンパイル\n","keras_model.compile(loss=\"mean_squared_error\", optimizer=\"sgd\",metrics=[tf.keras.metrics.RootMeanSquaredError(\n","name=\"root_mean_squared_error\", dtype=None)])\n","\n","#モデルをトレーニング\n","#validationのデータセットがあれば、それを渡すことで、validationに関してのlossやRMSEの計算なども簡単にできる。\n","history = keras_model.fit(train_X, train_Y, epochs=70, validation_data=(valid_X, valid_Y))\n"]},{"cell_type":"markdown","source":["損失関数とRMSEの値をエポックごとにプロットする。ValidationとTraningのデータセットのそれぞれに、その二つの値が計算されている。　エポックはトレーニングのデータセットを何回学習したかを表します。ニューラルネットでは一つのトレーニングのデータセットを何回も学習させます。"],"metadata":{"id":"nudpvV9FNTI8"}},{"cell_type":"code","execution_count":9,"metadata":{"id":"QeqAypyevTy9","colab":{"base_uri":"https://localhost:8080/","height":501},"executionInfo":{"status":"ok","timestamp":1658189442706,"user_tz":-540,"elapsed":1555,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"70021fb3-9e22-4487-9be6-3f598fc87a98"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x576 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["import pandas as pd \n","import matplotlib.pyplot as plt\n","pd.DataFrame(history.history).plot(figsize=(10,8))\n","plt.grid(True)\n","plt.gca().set_ylim(0,60)\n","plt.xlabel(\"# of Epocs\")\n","plt.show()\n","\n","\n","\n"]},{"cell_type":"markdown","source":["Test Datasetにモデルを適応して、RMSEを計算"],"metadata":{"id":"3xW99aZMN49B"}},{"cell_type":"code","execution_count":10,"metadata":{"id":"AA35BTjJvTy9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658189444662,"user_tz":-540,"elapsed":3,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"70ca02ae-fec8-43f5-b54d-188bb8f030d1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["4.599964603982525"]},"metadata":{},"execution_count":10}],"source":["mean_squared_error(test_Y,keras_model.predict(test_X)) ** (1/2)"]},{"cell_type":"markdown","metadata":{"id":"7hXlz7iBvTy9"},"source":["## Classificaiton using Keras "]},{"cell_type":"markdown","source":["Dataset\n","\n","手書きの数字を表したイメージが含まれている。イメージは28*28で全７８４ピクセル。\n","\n","Goal \n","\n","イメージが０から９のどの数字なのかを判別する。"],"metadata":{"id":"7H6eGUDslmQR"}},{"cell_type":"code","execution_count":12,"metadata":{"id":"f-R9_s0IvTy9","executionInfo":{"status":"ok","timestamp":1658189478466,"user_tz":-540,"elapsed":947,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}}},"outputs":[],"source":["#データをダウンロードして、トレーニングとテストに分ける\n","(train_X, train_Y), (test_X, test_Y) = tf.keras.datasets.mnist.load_data(path=\"mnist.npz\")\n"]},{"cell_type":"code","execution_count":13,"metadata":{"scrolled":true,"id":"caiVoYtgvTy9","colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"status":"ok","timestamp":1658189478870,"user_tz":-540,"elapsed":4,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"5cb3fde4-d006-46e8-8ff2-f078683f82a1"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["#イメージを実際に視覚化してみる\n","from matplotlib import pyplot as plt\n","plt.imshow(train_X[0],cmap='Greys')\n","plt.show()"]},{"cell_type":"code","execution_count":14,"metadata":{"scrolled":true,"id":"enlaIOA1vTy9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658189619305,"user_tz":-540,"elapsed":83620,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"e5d109f4-331f-422e-881b-249fc43f640b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," flatten (Flatten)           (None, 784)               0         \n","                                                                 \n"," dense_2 (Dense)             (None, 10)                7850      \n","                                                                 \n","=================================================================\n","Total params: 7,850\n","Trainable params: 7,850\n","Non-trainable params: 0\n","_________________________________________________________________\n","Epoch 1/20\n","1407/1407 [==============================] - 7s 5ms/step - loss: 0.8622 - accuracy: 0.8010 - val_loss: 0.5543 - val_accuracy: 0.8643\n","Epoch 2/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.4918 - accuracy: 0.8746 - val_loss: 0.4566 - val_accuracy: 0.8793\n","Epoch 3/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.4285 - accuracy: 0.8865 - val_loss: 0.4155 - val_accuracy: 0.8889\n","Epoch 4/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3971 - accuracy: 0.8932 - val_loss: 0.3927 - val_accuracy: 0.8933\n","Epoch 5/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3774 - accuracy: 0.8977 - val_loss: 0.3782 - val_accuracy: 0.8962\n","Epoch 6/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3636 - accuracy: 0.9009 - val_loss: 0.3672 - val_accuracy: 0.8982\n","Epoch 7/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3530 - accuracy: 0.9032 - val_loss: 0.3583 - val_accuracy: 0.9008\n","Epoch 8/20\n","1407/1407 [==============================] - 4s 3ms/step - loss: 0.3447 - accuracy: 0.9048 - val_loss: 0.3508 - val_accuracy: 0.9025\n","Epoch 9/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3379 - accuracy: 0.9066 - val_loss: 0.3453 - val_accuracy: 0.9049\n","Epoch 10/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3322 - accuracy: 0.9076 - val_loss: 0.3407 - val_accuracy: 0.9055\n","Epoch 11/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3272 - accuracy: 0.9089 - val_loss: 0.3368 - val_accuracy: 0.9070\n","Epoch 12/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3231 - accuracy: 0.9096 - val_loss: 0.3332 - val_accuracy: 0.9077\n","Epoch 13/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3193 - accuracy: 0.9108 - val_loss: 0.3306 - val_accuracy: 0.9086\n","Epoch 14/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3158 - accuracy: 0.9123 - val_loss: 0.3275 - val_accuracy: 0.9095\n","Epoch 15/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3129 - accuracy: 0.9128 - val_loss: 0.3249 - val_accuracy: 0.9101\n","Epoch 16/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3101 - accuracy: 0.9132 - val_loss: 0.3234 - val_accuracy: 0.9101\n","Epoch 17/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3077 - accuracy: 0.9142 - val_loss: 0.3207 - val_accuracy: 0.9113\n","Epoch 18/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3054 - accuracy: 0.9150 - val_loss: 0.3202 - val_accuracy: 0.9117\n","Epoch 19/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3033 - accuracy: 0.9152 - val_loss: 0.3172 - val_accuracy: 0.9133\n","Epoch 20/20\n","1407/1407 [==============================] - 3s 2ms/step - loss: 0.3015 - accuracy: 0.9155 - val_loss: 0.3163 - val_accuracy: 0.9130\n"]}],"source":["import tensorflow as tf \n","from tensorflow import keras\n","from sklearn.preprocessing import StandardScaler\n","\n","#training と　validationに分ける\n","train_X, valid_X, train_Y, valid_Y = train_test_split(train_X, train_Y)\n","\n","#最適化のアルゴリズムを早くするために、変数をスケーリングします。\n","train_X = train_X / 255.0\n","valid_X = valid_X / 255.0\n","test_X = test_X / 255.0\n","\n","\n","keras_clf = keras.models.Sequential()\n","#input layerを作る。もともとのinputのデータが2-Dなので、1Dにします。\n","keras_clf.add(keras.layers.Flatten(input_shape=[28,28]))\n","#output layer を作る.10個のクラスがあるので、10個のニューロンが必要。\n","keras_clf.add(keras.layers.Dense(10,activation = 'softmax'))\n","\n","keras_clf.summary()\n","keras_clf.compile(loss=\"sparse_categorical_crossentropy\", optimizer=\"sgd\",metrics=[\"accuracy\"])\n","history = keras_clf.fit(train_X, train_Y, epochs=20, validation_data=(valid_X, valid_Y))\n","\n","\n"]},{"cell_type":"markdown","source":[" 損失関数とaccuracyの値をエポックごとにプロットする。ValidationとTraningのデータセットのそれぞれに、その二つの値が計算されている。"],"metadata":{"id":"OFAHqKmTnFlp"}},{"cell_type":"code","execution_count":15,"metadata":{"id":"bPTb-xO0vTy-","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1658189619305,"user_tz":-540,"elapsed":17,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"da78bce3-c6ec-4f9e-f884-b913bc52a429"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 576x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["pd.DataFrame(history.history).plot(figsize=(8,5))\n","plt.grid(True)\n","plt.gca()\n","plt.xlabel(\"# of Epocs\")\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"7AMbWYBavTy-"},"source":["### Test データを使って予測してみる"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"sRT4lmozvTy-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658189619886,"user_tz":-540,"elapsed":586,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"19b47117-b045-4bad-fa84-6e025be55ef9"},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9179\n"]}],"source":["#accuracyを計算\n","from sklearn.metrics import accuracy_score\n","print(\"Accuracy: \" +str(accuracy_score(test_Y,keras_clf.predict(test_X).argmax(axis=-1))))"]},{"cell_type":"markdown","source":["ニューラルネットの学習の視覚化"],"metadata":{"id":"tQD_UdQ02IB-"}},{"cell_type":"markdown","source":["この数字判別の問題だと、アウトプットノードが１０個あります。それぞれのノードが７８４個のインプットノードとエッジで結ばれていて、そのエッジに重みがつけられています。つまり、一つのクラスに７８４個の重みがあります。\n","\n","それでは、ここでいう重みの最適化は何を指すのでしょうか？簡単にいうと、あるラベルがついたインプットが来た時、そのラベルを判別するアウトプットノードが他のノードに比べて大きな値を出力できるような重みを計算するのが最適化にあたります。\n","\n","この数字判別の例だと、仮に１を表すインプットが与えられた時、１を判別するアウトプットノードが一番大きい値を出力するような重みを計算しなければなりません。もう少し詳しくいうと、１という数字のイメージに相関があるピクセルに高い重みを与えればいいのです。そうすれば、インプットと重みのドット積も大きな値を出します。\n","\n","従って、重みを視覚化すると数字がぼんやりと見えます。下の図は数字の３を判別するアウトプットノードと全てのインプットのエッジの間の重みを視覚化したものです。 赤いとこほど、大きな重みを持っています。\n","\n","ニューラルネットワークでの学習は重みを最適化することです。あるインプットに紐づいている重みが少ないということは、それほど重要ではないということです。下の図は、そういった意味ではニューラルネットワークが重要だと学習したピクセルの位置を示していると言えます。\n","\n"],"metadata":{"id":"Q_XyJliK3ss1"}},{"cell_type":"code","execution_count":17,"metadata":{"id":"RvhoDv9dvTy-","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1658189619887,"user_tz":-540,"elapsed":6,"user":{"displayName":"TU22013古澤 創代","userId":"12673757494323170238"}},"outputId":"8cacc175-72d6-4ea0-c11a-0fc7e37eb8db"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7fc5437ce410>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["#３のアウトプットノードに関連する重みを全部について、２８＊２８の2-Dに変換\n","plt.imshow(np.reshape(keras_clf.get_weights()[0][:,3],(28,28)),cmap=\"seismic\")"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"},"colab":{"name":"Deep_learning_material_tempate.ipynb のコピー","provenance":[{"file_id":"1D_Yu-4BGlO_OjIX6_o__Kxsbc-L250oM","timestamp":1658188859230},{"file_id":"1vrDzjX4Jqz_1wDEn7q4DQ1KoeSXotcrD","timestamp":1657627193769}],"collapsed_sections":[]}},"nbformat":4,"nbformat_minor":0}